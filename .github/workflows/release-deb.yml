name: Deploy DEB Package Release

on:
  push:
    paths:
      - 'ubuntu/paquetes/*.deb'
    branches:
      - main  # Ajusta a tu rama principal

# ConfiguraciÃ³n para que aparezca en Deployments
permissions:
  contents: write
  deployments: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    environment: 
      name: deb-releases
      url: https://github.com/${{ github.repository }}/releases
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Necesario para tags

    - name: Setup deployment status
      uses: actions/github-script@v6
      id: deployment
      with:
        script: |
          const deployment = await github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.ref,
            auto_merge: false,
            required_contexts: [],
            environment: 'deb-releases',
            transient_environment: true,
            production_environment: false
          })
          return deployment.data.id

    - name: Find DEB package
      id: package
      run: |
        DEB_FILE=$(ls ubuntu/paquetes/*.deb | head -n 1)
        DEB_NAME=$(basename "$DEB_FILE")
        VERSION=$(echo "$DEB_NAME" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' || date +"%Y.%m.%d")
        
        echo "file_path=$DEB_FILE" >> $GITHUB_OUTPUT
        echo "file_name=$DEB_NAME" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "DEB_FILE=$DEB_FILE" >> $GITHUB_ENV

    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.descargarDEB }}  # AsegÃºrate que este es el nombre de tu secret
      with:
        tag_name: "deb-${{ steps.package.outputs.version }}"
        name: "DEB Package v${{ steps.package.outputs.version }}"
        body: |
          ðŸ“¦ Paquete .deb para Ubuntu
          
          **InstalaciÃ³n:**
          ```bash
          sudo dpkg -i ${{ steps.package.outputs.file_name }}
          sudo apt install -f
          ```
        files: ${{ steps.package.outputs.file_path }}
        draft: false
        prerelease: false

    - name: Update deployment status
      uses: actions/github-script@v6
      if: always()
      with:
        script: |
          await github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: ${{ steps.deployment.outputs.result }},
            state: ${{ job.status == 'success' ? 'success' : 'failure' }},
            environment_url: 'https://github.com/${{ github.repository }}/releases/tag/deb-${{ steps.package.outputs.version }}'
          })