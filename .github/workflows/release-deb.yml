name: Publish .deb Packages

on:
  push:
    paths:
      - 'ubuntu/paquetes/*.deb'
    branches:
      - main  # Ajusta según tu rama principal

jobs:
  publish-deb:
    runs-on: ubuntu-latest
    concurrency:
      group: deb-release-${{ github.ref }}
      cancel-in-progress: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Necesario para tags
    
    - name: Find .deb package
      id: package
      run: |
        # Busca el primer archivo .deb en el directorio
        DEB_PATH=$(ls ubuntu/paquetes/*.deb | head -n 1)
        DEB_NAME=$(basename "$DEB_PATH")
        
        # Extrae versión del nombre del archivo (formato: nombre_version_arch.deb)
        VERSION=$(echo "$DEB_NAME" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' || date +"%Y.%m.%d")
        
        echo "DEB_PATH=$DEB_PATH" >> $GITHUB_OUTPUT
        echo "DEB_NAME=$DEB_NAME" >> $GITHUB_OUTPUT
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # Opcional: Verifica que el archivo existe
        if [ ! -f "$DEB_PATH" ]; then
          echo "Error: No se encontró el archivo .deb"
          exit 1
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "deb-${{ steps.package.outputs.VERSION }}"
        name: "Package v${{ steps.package.outputs.VERSION }}"
        body: |
          Paquete .deb para Ubuntu
          
          **Instalación:**
          ```bash
          sudo dpkg -i ${{ steps.package.outputs.DEB_NAME }}
          sudo apt install -f  # Para resolver dependencias
          ```
          
          **SHA256:**
          `$(sha256sum ${{ steps.package.outputs.DEB_PATH }} | cut -d' ' -f1)`
        files: ${{ steps.package.outputs.DEB_PATH }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.descargarDEB }}

    - name: Verify release
      run: |
        echo "Release creado exitosamente:"
        echo "Versión: ${{ steps.package.outputs.VERSION }}"
        echo "Archivo: ${{ steps.package.outputs.DEB_NAME }}"