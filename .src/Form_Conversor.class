' Gambas class file

' Private destino As String = File.Dir(Dialog.Path) &/ txtFecha.Text & txtDESTINO.Text & ".tex"
Private contenido As String
Private contenidoRTF As String

Public Sub Form_Open()

  Dim fecha As String

  fecha = Format(Date(), "yyyymmdd") ' Obtener la fecha actual

  txtFecha.Text = fecha

End

Public Sub btnBuscar_Click()

  Dialog.Title = "Seleccionar archivo"

  ' Ajustar el filtro según el RadioButton seleccionado
  If RadioButton1.Value Then  ' Si está seleccionado el RadioButton para DOCX
    Dialog.Filter = ["*.docx", ("Archivos word"), "*", ("Todos los archivos")]
  Else If RadioButton3.Value Then  ' Si está seleccionado el RadioButton para RTF
    Dialog.Filter = ["*.rtf", ("Archivos rtf"), "*", ("Todos los archivos")]
  Else  ' Por defecto, mostrar ambos tipos
    Dialog.Filter = ["*.docx", ("Archivos word"), "*.rtf", ("Archivos rtf"), "*", ("Todos los archivos")]
  Endif

  Dialog.AutoExt = True
  Dialog.Path = User.Home
  If Dialog.OpenFile() Then
    Return
  Else
    If Not Exist(File.Dir(Dialog.Path) & "/originales") Then
      Mkdir File.Dir(Dialog.Path) & "/originales"
    End If
    If Not Exist(File.Dir(Dialog.Path) & "/media") Then
      Mkdir File.Dir(Dialog.Path) & "/media"
    End If
    txtORIGEN.Text = Dialog.Path
    btnCONVERTIR.Enabled = True
  Endif
Catch
  Message.Error("No se pudo abrir el archivo")

End

Public Sub Form_Close()

  Me.Close()

End

Public Sub btnSalir_Click()

  Me.Close()

End

Public Sub btnListo_Click()

  Me.Close()

End

Public Sub btnCONVERTIR_Click()

  txtORIGEN.Text = Dialog.Path

  Dim rutaOrigen As String = txtORIGEN.Text

  ' convertir .docx
  If RadioButton1.Value = True And RadioButton3.Value = False Then
    If Trim(txtDESTINO.Text) = "" Then
      Message.Error("El campo de Destino no puede estar vacío", "Cancelar")
    Else
      Dim rutaFILTROLUA As String = Quote$(User.Home &/ ".gbtexpublisher/filtro.lua")
      Dim mediaDir As String = Quote$(File.Dir(rutaOrigen) &/ "media")
      Dim archivoFinal As String = Quote$(File.Dir(rutaOrigen) &/ txtFecha.Text & txtDESTINO.Text & ".tex")
      ' ' Ejecuta el comando Pandoc para convertir el archivo DOCX a LaTeX
      Shell "pandoc " & Quote$(rutaOrigen) & " -o " & archivoFinal & " --lua-filter=" & rutaFILTROLUA & " --from=docx --to=latex --wrap=none --extract-media=" & mediaDir Wait

      Dim rutaBase As String = File.Dir(rutaOrigen) &/ txtFecha.Text & txtDESTINO.Text & ".tex"

      ' Verifica y carga el archivo (usa rutaBase SIN comillas)
      If Not File.RealPath(rutaBase) Then
        Message.Error("El archivo no se pudo generar")
      Else
        contenido = File.Load(rutaBase)  ' ¡Sin Quote$() aquí!
      End If

      ' Paso 2: Abrir el archivo original para SOBREESCRIBIRLO con el contenido modificado
      Dim hFile As File
      hFile = Open rutaBase For Write

      ' Paso 3: Escribir cabecera
      Print #hFile, "%  archivo con cabecera para libros, compilar con LuaLaTeX"
      Print #hFile, ""
      Print #hFile, "\\documentclass{book}"
      Print #hFile, "\\usepackage[spanish]{babel}"
      Print #hFile, "\\usepackage{fontspec}"
      Print #hFile, "\\setmainfont{Libertinus Serif}"
      Print #hFile, "\\usepackage{graphicx}"
      Print #hFile, "\\usepackage{xcolor}"
      Print #hFile, "\\usepackage{longtable}"
      Print #hFile, "\\usepackage{caption}"
      Print #hFile, "\\usepackage{hyperref}"
      Print #hFile, ""
      Print #hFile, "\\begin{document}"
      Print #hFile, "\\frontmatter"
      Print #hFile, ""

      ' Paso 4: Escribir contenido original
      Print #hFile, contenido

      ' Paso 5: Escribir pie
      Print #hFile, ""
      Print #hFile, "\\end{document}"

      ' Paso 6: Cerrar el archivo
      Close #hFile

      ' Mueve el archivo de origen a la carpeta "originales" usando el comando mv
      Dim destinoOriginal As String = Quote$(File.Dir(rutaOrigen) &/ "originales" &/ File.Name(rutaOrigen))
      Shell "mv " & Quote$(rutaOrigen) & " " & destinoOriginal Wait
      btnListo.Visible = True
      btnListo.Default = True
      btnSalir.Visible = False
    Endif
  Endif

  '
  ' conversión desde un archivo rtf
  Dim archivoFinalRTF As String = Quote$(File.Dir(rutaOrigen) &/ txtFecha.Text & txtDESTINO.Text & ".tex")
  If RadioButton3.Value And Not RadioButton1.Value Then
    If Trim(txtDESTINO.Text) = "" Then
      Message.Error("El campo de Destino no puede estar vacío", "Cancelar")
    Else
      Dim mediaDirRTF As String = Quote$(File.Dir(Dialog.Path) & "/media")

      ' Ejecutar pandoc con manejo de errores
      Shell "pandoc " & Quote$(rutaOrigen) & " -o " & archivoFinalRTF & " --from=rtf --to=latex --wrap=none --extract-media=" & mediaDirRTF Wait

      ' Leer el contenido generado
      contenidoRTF = File.Load(archivoFinalRTF)

      ' Escribir el nuevo contenido con cabecera y pie
      Dim hFileRTF As File
      hFileRTF = Open archivoFinalRTF For Write

      Print #hFileRTF, "%  archivo con cabecera para libros, compilar con LuaLaTeX"
      Print #hFileRTF, ""
      Print #hFileRTF, "\\documentclass{book}"
      Print #hFileRTF, "\\usepackage[spanish]{babel}"
      Print #hFileRTF, "\\usepackage{fontspec}"
      Print #hFileRTF, "\\setmainfont{Libertinus Serif}"
      Print #hFileRTF, "\\usepackage{graphicx}"
      Print #hFileRTF, "\\usepackage{xcolor}"
      Print #hFileRTF, "\\usepackage{longtable}"
      Print #hFileRTF, "\\usepackage{caption}"
      Print #hFileRTF, "\\usepackage{hyperref}"
      Print #hFileRTF, ""
      Print #hFileRTF, "\\begin{document}"
      Print #hFileRTF, "\\frontmatter"
      Print #hFileRTF, ""
      Print #hFileRTF, contenidoRTF
      Print #hFileRTF, ""
      Print #hFileRTF, "\\end{document}"

      Close #hFileRTF

      ' Mueve el archivo de origen a la carpeta "originales" usando el comando mv
      Dim destinoOriginalRTF As String = Quote$(File.Dir(rutaOrigen) &/ "originales" &/ File.Name(rutaOrigen))
      Shell "mv " & Quote$(rutaOrigen) & " " & destinoOriginalRTF Wait
      btnListo.Visible = True
      btnListo.Default = True
      btnSalir.Visible = False
    End If
  Endif

End

Public Sub txtDESTINO_KeyRelease()
  ' Obtener el texto actual del TextBox

  Dim texto As String

  texto = txtDESTINO.Text

  ' Lista de caracteres permitidos
  Dim caracteresPermitidos As String = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"

  ' Filtrar el texto para eliminar caracteres no permitidos
  Dim textoFiltrado As String
  For i As Integer = 1 To Len(texto)
    Dim tecla As String
    tecla = Mid(texto, i, 1)
    If InStr(caracteresPermitidos, tecla) > 0 Then
      textoFiltrado = textoFiltrado & tecla
    End If
  Next

  ' Limitar la longitud del texto a 11 caracteres
  If Len(textoFiltrado) > 20 Then
    ' Mostrar un mensaje de aviso
    Message.Warning("El nombre de salida del archivo no puede contener más de 20 caracteres.", "Entendido")
    ' Eliminar los caracteres adicionales
    txtDESTINO.Text = Left(textoFiltrado, 20)
  Else
    ' Actualizar el TextBox con el texto filtrado y convertirlo a mayúsculas
    txtDESTINO.Text = UCase(textoFiltrado)
  End If

End
