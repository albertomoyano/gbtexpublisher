' Gambas class file

Public Sub Form_Open()

  Dim fecha As String

  fecha = Format(Date(), "yyyymmdd") ' Obtener la fecha actual

  txtFecha.Text = fecha

End

Public Sub btnBuscar_Click()

  Dialog.Title = "Seleccionar archivo"
  Dialog.Filter = ["*.docx", ("Archivos word"), "*.rtf", ("Archivos rtf"), "*", ("Todos los archivos")]
  Dialog.AutoExt = True
  Dialog.Path = User.Home
  If Dialog.OpenFile() Then
    Return
  Else
    txtORIGEN.Text = Dialog.Path
    btnCONVERTIR.Enabled = True
  Endif

Catch
  Message.Error("No se pudo abrir el archivo")

End

Public Sub Form_Close()

  Me.Close()

End

Public Sub btnSalir_Click()

  Me.Close()

End

Public Sub btnListo_Click()

  Me.Close()

End

Public Sub btnCONVERTIR_Click()

  Dim destino As String = File.Dir(Dialog.Path) &/ txtFecha.Text & txtDESTINO.Text & ".tex"
  Dim destinoRTF As String = File.Dir(Dialog.Path) &/ txtDESTINO.Text & "@.rtf"
  Dim rutaORIGINALES As String = File.Dir(Dialog.Path) &/ "originales"
  Dim rutaMEDIA As String = File.Dir(Dialog.Path) &/ "media"
  ' Escapa las rutas de origen y destino
  Dim escapedPath As String = EscapePath(Dialog.Path)
  Dim escapedOriginalesPath As String = EscapePath(rutaORIGINALES &/ File.Name(Dialog.Path))
  Dim archivoHTML As File

  txtORIGEN.Text = Dialog.Path

  If Not Exist(rutaORIGINALES) Then
    Mkdir rutaORIGINALES
  End If

  If Not Exist(rutaMEDIA) Then
    Mkdir rutaMEDIA
  End If

  ' conversion desde un archivo docx
  Dim archivoFinal As String = File.Dir(Dialog.Path) &/ txtFecha.Text & txtDESTINO.Text & ".tex"
  If RadioButton1.Value = True And RadioButton2.Value = False And RadioButton3.Value = False Then
    If Trim(txtDESTINO.Text) = "" Then
      Message.Error("El campo de Destino no puede estar vacío", "Cancelar")
    Else
      ' Ejecuta el comando Pandoc para convertir el archivo DOCX a LaTeX
      Shell "pandoc -f docx -t latex --wrap=none --extract-media=" & File.Dir(Dialog.Path) & "/media/" & " " & Quote$(Dialog.Path) & " -o " & Quote$(archivoFinal) Wait

      ' Paso 1: Leer el archivo generado por Pandoc
      Dim contenido As String = File.Load(archivoFinal)

      ' Paso 2: Abrir el archivo original para SOBREESCRIBIRLO con el contenido modificado
      Dim hFile As File
      hFile = Open archivoFinal For Write

      ' Paso 3: Escribir cabecera
      Print #hFile, "%  archivo cabecera para libros"
      Print #hFile, "%  compilar con LuaLaTeX"
      Print #hFile, "\\documentclass{book}"
      Print #hFile, "\\usepackage[spanish]{babel}"
      Print #hFile, "\\usepackage{fontspec}"
      Print #hFile, "\\setmainfont{Libertinus Serif}"
      Print #hFile, "\\usepackage{graphicx}"
      Print #hFile, "\\usepackage{xcolor}"
      Print #hFile, "\\usepackage{hyperref}"
      Print #hFile, ""
      Print #hFile, "\\begin{document}"
      Print #hFile, "\\frontmatter"
      Print #hFile, ""

      ' Paso 4: Escribir contenido original
      Print #hFile, contenido

      ' Paso 5: Escribir pie
      Print #hFile, ""
      Print #hFile, "\\end{document}"

      ' Paso 6: Cerrar el archivo
      Close #hFile

      ' Mueve el archivo de origen a la carpeta "originales" usando el comando mv
      Shell "mv " & escapedPath & " " & escapedOriginalesPath
      Wait 0.2
      btnListo.Visible = True
      btnListo.Default = True
    Endif
  Endif

  ' ' conversion desde un archivo docx
  ' Dim archivoFinal As String = File.Dir(Dialog.Path) &/ txtFecha.Text & txtDESTINO.Text & ".tex"
  ' If RadioButton1.Value = True And RadioButton2.Value = False And RadioButton3.Value = False Then
  '   If Trim(txtDESTINO.Text) = "" Then
  '     Message.Error("El campo de Destino no puede estar vacío", "Cancelar")
  '   Else
  '     ' Ejecuta el comando Pandoc para convertir el archivo DOCX a LaTeX
  '     Shell "pandoc -f docx -t latex --wrap=none --extract-media=" & File.Dir(Dialog.Path) & "/media/" & " " & Quote$(Dialog.Path) & " -o " & Quote$(archivoFinal) Wait
  '
  '     ' Paso 1: Leer el archivo generado por Pandoc
  '     Dim contenido As String = File.Load(archivoFinal)
  '
  '     ' Paso 2: Abrir el archivo original para SOBREESCRIBIRLO con el contenido modificado
  '     Dim hFile As Integer
  '     Open archivoFinal For Output As #hFile
  '
  '     ' Paso 3: Escribir cabecera
  '     Print #hFile, "\\documentclass{article}"
  '     Print #hFile, "\\usepackage[utf8]{inputenc}"
  '     Print #hFile, "\\begin{document}"
  '     Print #hFile, "\\frontmatter"
  '     Print #hFile, ""
  '
  '     ' Paso 4: Escribir contenido original
  '     Print #hFile, contenido
  '
  '     ' Paso 5: Escribir pie
  '     Print #hFile, ""
  '     Print #hFile, "\\end{document}"
  '
  '     ' Paso 6: Cerrar el archivo
  '     Close #hFile
  '
  '     ' Mueve el archivo de origen a la carpeta "originales" usando el comando mv
  '     Shell "mv " & escapedPath & " " & escapedOriginalesPath
  '     Wait 0.2
  '     btnListo.Visible = True
  '     btnListo.Default = True
  '   Endif
  ' Endif

  ' conversion usando doc2tex
  Dim hprocess As Process
  If RadioButton2.Value = True And RadioButton1.Value = False And RadioButton3.Value = False Then
    If Trim(txtDESTINO.Text) = "" Then
      Message.Error("El campo de Destino no puede estar vacío", "Cancelar")
    Else
      hprocess = Shell User.Home &/ "docx2tex/d2t " & txtORIGEN.Text
      Do While hprocess.state = Process.Running
        Wait 0.2
      Loop
      Shell "mv " & File.Dir(Dialog.Path) &/ File.BaseName(Dialog.Path) & ".docx.tmp/word/media" & " " & File.Dir(Dialog.Path)
      Wait 0.2
      Shell "rm -r " & File.Dir(Dialog.Path) &/ File.BaseName(Dialog.Path) & ".xml"
      Wait 0.1
      Shell "rm -r " & File.Dir(Dialog.Path) &/ File.BaseName(Dialog.Path) & ".csv"
      Wait 0.1
      Shell "rm -r " & File.Dir(Dialog.Path) &/ File.BaseName(Dialog.Path) & ".d2t.log"
      Wait 0.1
      Shell "rm -r " & File.Dir(Dialog.Path) &/ File.BaseName(Dialog.Path) & ".debug"
      Wait 0.1
      Shell "rm -r " & File.Dir(Dialog.Path) &/ File.BaseName(Dialog.Path) & ".docx.tmp"
      Wait 0.1
      Shell "mv " & File.Dir(Dialog.Path) &/ File.Name(Dialog.Path) & " " & rutaORIGINALES
      Wait 0.2
    Endif
    If hprocess.State = Process.Stopped Then
      btnCONVERTIR.Enabled = False
      btnListo.Visible = True
    Endif
  Endif

  ' conversion usando pandoc con rtf
  Dim zprocess As Process
  If RadioButton3.Value = True And RadioButton1.Value = False And RadioButton2.Value = False Then
    If Trim(txtDESTINO.Text) = "" Then
      Message.Error("El campo de Destino no puede estar vacío", "Cancelar")
    Else
      zprocess = Shell "iconv -f ISO-8859-1 -t UTF-8 " & escapedPath & " > " & destinoRTF
      Wait 0.5
      zprocess = Shell "pandoc -s " & destinoRTF & " -o " & destino & " --from=rtf --to=latex --wrap=none --extract-media=" & rutaMEDIA
      Wait 0.5
      ' Mueve el archivo de origen a la carpeta "originales" usando el comando mv
      zprocess = Shell "rm " & destinoRTF
      Wait 0.5
      zprocess = Shell "mv " & escapedPath & " " & escapedOriginalesPath
      Wait 0.5

      Do While zprocess.state = Process.Running
        Wait 0.1
      Loop
      If zprocess.State = Process.Stopped Then
        btnCONVERTIR.Enabled = False
        btnListo.Visible = True
        btnListo.Default = True
      Endif
    End If
  End If

End

Private Function EscapePath(path As String) As String

  Return "'" & Replace(path, "'", "'\\''") & "'"

End

Public Sub txtDESTINO_KeyRelease()
  ' Obtener el texto actual del TextBox

  Dim texto As String

  texto = txtDESTINO.Text

  ' Lista de caracteres permitidos
  Dim caracteresPermitidos As String = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"

  ' Filtrar el texto para eliminar caracteres no permitidos
  Dim textoFiltrado As String
  For i As Integer = 1 To Len(texto)
    Dim tecla As String
    tecla = Mid(texto, i, 1)
    If InStr(caracteresPermitidos, tecla) > 0 Then
      textoFiltrado = textoFiltrado & tecla
    End If
  Next

  ' Limitar la longitud del texto a 11 caracteres
  If Len(textoFiltrado) > 20 Then
    ' Mostrar un mensaje de aviso
    Message.Warning("El nombre de salida del archivo no puede contener más de 20 caracteres.", "Entendido")
    ' Eliminar los caracteres adicionales
    txtDESTINO.Text = Left(textoFiltrado, 20)
  Else
    ' Actualizar el TextBox con el texto filtrado y convertirlo a mayúsculas
    txtDESTINO.Text = UCase(textoFiltrado)
  End If

End
