' Gambas class file

Private Contenido As Result
Private filePathPDF As String
Private filePathTEX As String
Private filePathFiles As String
Private NombreArchivoPDF As String = "pdf-" & File.BaseName(FMain.TextBox1.Text) & ".pdf"
Private NombreArchivoTEX As String = File.BaseName(FMain.TextBox1.Text) & ".tex"

Public Sub Form_Open()

  Splitter1.Layout = [1, 5]
  ' Crear una nueva conexión

  filePathPDF = File.Dir(FMain.TextBox1.Text) & "/pdf/" & NombreArchivoPDF
  filePathTEX = File.Dir(FMain.TextBox1.Text) & NombreArchivoTEX
  filePathFiles = File.Dir(FMain.TextBox1.Text) & "/files/"

  If File.RealPath(filePathPDF) <> "" Then
    ' Si el archivo existe, continuar con la apertura del formulario
    verTipoDocumento
    levantarOT()
    levantarOTmetadatos()
    'aquí van las funciones del formulario
    '2) llenar los textbox básicos
  Else
    Message.Error("El archivo <b>" & NombreArchivoPDF & "</b> no existe.")
    Me.Close
  Endif

End

Public Sub btnSalirOT_Click()

  Me.Close()

End

Public Sub Splitter1_Resize()

  Splitter1.Layout = [1, 5]

End

Public Sub verTipoDocumento()

  Dim comando As String
  Dim tipoDocumento As String

  ' Realizar la consulta
  comando = "SELECT * FROM tipoDocumento WHERE nombreArchivo = '" & nombreArchivoTEX & "'"
  Contenido = FMain.meConn.Exec(comando)

  ' Verificar si la consulta devolvió resultados
  If Contenido.Available Then
    ' Obtener el valor de tipoDocumento
    tipoDocumento = Contenido!tipoDocumento

    ' Condicional para elegir la función según el tipo de documento
    Select Case tipoDocumento
      Case "tipoLibro"
        Form_OTimprenta.Title = "Orden de taller para impresión"
        txtLabel.Text = "Orden de impresión para el archivo <strong> " & NombreArchivoPDF & "</strong>"
      Case Else
        Message.Error("No es posble generar una orden de taller para el archivo <strong>" & NombreArchivoPDF & "</strong>, ya que el mismo no es un libro.")
        Me.Close()
    End Select
  Else
    Message.Error("El archivo no existe en la base de datos.")
  End If

End

Public Sub guardarCamposOT()' As Boolean

  Contenido!id = txtIDot.Text
  Contenido!nombreArchivo = txtOrigenOT.Text
  Contenido!proveedor = txtProveedorOT.Text
  Contenido!copias = txtCopiasOT.Text
  Contenido!tintasInterior = txtTintasInteriorOT.Text
  Contenido!papelInterior = txtPapelInteriorOT.Text
  Contenido!encuadernacion = txtEncuadernacionOT.Text
  Contenido!tintasTapa = txtTintasTapaOT.Text
  Contenido!papelTapa = txtPapelTapaOT.Text
  Contenido!revestimiento = txtRevestimientoOT.Text
  Contenido!notas = txtNotasOT.Text
  Contenido!archivotapa = txtArchAdjunto1.Text
  Contenido!archivointerior = txtArchAdjunto2.Text

End

Public Sub btnNuevaOT_Click()

  btnNuevaOT.Visible = True
  btnGuardarOT.Visible = False
  btnGuardarCambiosOT.Visible = False

  Dim Idn As Integer

  ' Obtenemos el último ID y sumamos +1 para el nuevo registro
  Contenido = FMain.meConn.Exec("SELECT MAX(id) FROM ot LIMIT 1")

  ' Si no hay ninguna entrada entonces arrancamos desde 0
  If Contenido["MAX(id)"] = Null Then
    Idn = 0
  Else
    Idn = CInt(Contenido["MAX(id)"]) + 1
  Endif
  txtIDot.Text = Idn
  txtOrigenOT.Text = NombreArchivoTEX 'colocamos el nombre del archivo

  btnNuevaOT.Visible = False
  btnGuardarOT.Visible = True
  btnGuardarCambiosOT.Visible = False

End

Public Sub btnGuardarOT_Click()

  Contenido = FMain.meConn.Create("ot")

  guardarCamposOT()
  Contenido.Update

  Message.Info("Los cambios se guardaron con éxito.")

  BtnNuevaOT.Enabled = False
  btnGuardarOT.Enabled = False
  btnGuardarCambiosOT.Enabled = True

End

Public Sub btnGuardarCambiosOT_Click()

  Contenido = FMain.meConn.Edit("ot", "id=" & txtIDot.Text)

  If Contenido.Available Then
    guardarCamposOT()
    Contenido.Update
    Message.Info("Los cambios se guardaron con éxito.")
  Else
    Message.Error("<strong>No se pudieron guardar los cambios.</strong>")
  Endif

End

Public Sub levantarOT()

  'levantamos los datos de comentarios
  Dim comandoOT As String

  comandoOT = "select * from ot where nombreArchivo = '" & nombreArchivoTEX & "'"
  Contenido = FMain.meConn.Exec(comandoOT)
  If Contenido.Count > 0 Then
    btnNuevaOT.Visible = False
    btnGuardarOT.Visible = False
    btnGuardarCambiosOT.Visible = True
    txtIDot.Text = Contenido!id
    txtOrigenOT.Text = Contenido!nombreArchivo
    txtProveedorOT.Text = Contenido!proveedor
    txtCopiasOT.Text = Contenido!copias
    txtTintasInteriorOT.Text = Contenido!tintasInterior
    txtPapelInteriorOT.Text = Contenido!papelInterior
    txtEncuadernacionOT.Text = Contenido!encuadernacion
    txtTintasTapaOT.Text = Contenido!tintasTapa
    txtPapelTapaOT.Text = Contenido!papelTapa
    txtRevestimientoOT.Text = Contenido!revestimiento
    txtNotasOT.Text = Contenido!notas
    txtArchAdjunto1.Text = Contenido!archivotapa
    txtArchAdjunto2.Text = Contenido!archivointerior
  Else
    txtIDot.Text = ""
    txtOrigenOT.Text = ""
    txtProveedorOT.Text = ""
    txtCopiasOT.Text = ""
    txtTintasInteriorOT.Text = ""
    txtPapelInteriorOT.Text = ""
    txtEncuadernacionOT.Text = ""
    txtTintasTapaOT.Text = ""
    txtPapelTapaOT.Text = ""
    txtRevestimientoOT.Text = ""
    txtNotasOT.Text = ""
    txtArchAdjunto1.Text = ""
    txtArchAdjunto2.Text = ""
    btnNuevaOT.Visible = True
    btnGuardarOT.Visible = False
    btnGuardarCambiosOT.Visible = False
  Endif

End

Public Sub levantarOTmetadatos()

  'levantamos los datos de comentarios
  Dim comandoOTmetadatos As String
  Dim Himagen As String

  comandoOTmetadatos = "select * from metadatos where nombreArchivo = '" & nombreArchivoTEX & "'"
  Contenido = FMain.meConn.Exec(comandoOTmetadatos)
  If Contenido.Count > 0 Then
    txtAutorOT.Text = Contenido!pdfauthor_05
    txtTituloOT.Text = Contenido!bookTitle_84
    txtPaginasOT.Text = Contenido!pagetotal_50
    txtFormatoOT.Text = Contenido!formato_61
    Himagen = Contenido!imagentapa_49
    picTapaOT.Picture = Picture[Himagen]
  Else
    txtAutorOT.Text = ""
    txtTituloOT.Text = ""
    txtPaginasOT.Text = ""
    txtFormatoOT.Text = ""
  Endif

End

Public Sub btnGenerarPDF_Click()

  ' Verifica si todos los TextBox (txtOT1, txtOT2, txtOT3) están llenos
  If txtProveedorOT.Text = "" Or txtCopiasOT.Text = "" Or txtTintasInteriorOT.Text = "" Or txtPapelInteriorOT.Text = "" Or txtEncuadernacionOT.Text = "" Or txtTintasTapaOT.Text = "" Or txtPapelTapaOT.Text = "" Or txtRevestimientoOT.Text = "" Then
    Message.Error("Uno o más campos están vacíos. Deben completarse para continuar.")
    Return  ' Cancela la operación si alguno de los TextBox está vacío
  Endif

  ' Verifica si todos los TextBox (txtOT1, txtOT2, txtOT3) están llenos
  If txtAutorOT.Text = "" Or txtPaginasOT.Text = "" Or txtFormatoOT.Text = "" Then
    Message.Error("Uno o más campos de los metadatos están vacíos. Deben completarse para continuar.")
    Return  ' Cancela la operación si alguno de los TextBox está vacío
  Endif

  FMain.TabPanel1.Index = 0
  FMain.TabPanel6.Index = 0
  ' borramos la orden de taller anterior
  Shell "rm -rf " & File.Dir(FMain.TextBox1.Text) & "/files/gbTeXOT-" & File.BaseName(FMain.TextBox1.Text) & ".tex" & "\n"
  Wait 0.1
  ExportToOrdenTaller()

  FMain.TerminalView1.Input("latexmk -f --interaction=nonstopmode -pdflatex=lualatex -pdflua " & filePathFiles & "gbTeXOT-" & NombreArchivoTEX & "\n")
  Wait 0.1

  FMain.TerminalView1.Input("mv gbTeXOT-" & File.BaseName(FMain.TextBox1.Text) & ".pdf" & " " & File.Dir(FMain.TextBox1.Text) & "/pdf/gbTeXOT-" & File.BaseName(FMain.TextBox1.Text) & ".pdf" & "\n")
  Wait 0.1

  Mod_Funciones.Borrar_Aux()

End

'exportamos la OT
Public Sub ExportToOrdenTaller()

  Dim s As String
  Dim f As ResultField
  Dim fb As ResultField
  Dim fc As ResultField
  Dim aFields As New String[]' arreglo para ot
  Dim bFields As New String[]' arreglo para metadatos
  Dim cFields As New String[]' arreglo para comentarios
  Dim w As Integer
  Dim wb As Integer
  Dim wc As Integer
  Dim buscarOT As String
  Dim buscarMeta As String
  Dim buscarComenta As String
  Dim outputFile As String
  Dim ContenidoMeta As Result
  Dim ContenidoComenta As Result

  buscarOT = "select * from ot where nombreArchivo like '%" & NombreArchivoTEX & "%'"
  Contenido = FMain.meConn.Exec(buscarOT)
  buscarMeta = "select * from metadatos where nombreArchivo like '%" & NombreArchivoTEX & "%'"
  ContenidoMeta = FMain.meConn.Exec(buscarMeta)
  buscarComenta = "select * from comentarios where nombreArchivo like '%" & NombreArchivoTEX & "%'"
  ContenidoComenta = FMain.meConn.Exec(buscarComenta)

  aFields.Clear
  For Each f In Contenido.Fields
    aFields.Add(f.Name)
    If Len(f.Name) > w Then
      w = Len(f.Name)
    Endif
  Next

  bFields.Clear
  For Each fb In ContenidoMeta.Fields
    bFields.Add(fb.Name)
    If Len(fb.Name) > wb Then
      wb = Len(fb.Name)
    Endif
  Next

  cFields.Clear
  For Each fc In ContenidoComenta.Fields
    cFields.Add(fc.Name)
    If Len(fc.Name) > wc Then
      wc = Len(fc.Name)
    Endif
  Next

  While Contenido.Available
    s &= "\\documentclass[11pt]{article}" & "\n"
    s &= "\\usepackage[paperwidth=210mm,paperheight=297mm,top=20mm,bottom=20mm,left=20mm,marginparsep=6mm,marginparwidth=44mm,textwidth=13cm,headsep=0pt,headheight=0pt,footskip=0pt,footnotesep=13.5pt plus 0.1pt minus 0.1pt]{geometry}" & "\n"
    s &= "\\usepackage[spanish,es-ucroman,es-noshorthands]{babel}" & "\n"
    s &= "\\usepackage[autostyle=true]{csquotes}" & "\n"
    s &= "\\usepackage{graphicx}" & "\n"
    s &= "\\usepackage{fontspec}" & "\n"
    s &= "\\usepackage{microtype}" & "\n"
    s &= "\\newfontfeature{Microtypography}{protrusion=default;expansion=default}" & "\n"
    s &= "\\directlua{fonts.protrusions.setups.default.factor=.5}" & "\n"
    s &= "\\renewcommand{\\normalsize}{\\fontsize{11pt}{14.5pt}\\selectfont}" & "\n"
    s &= "\\topskip=14.5pt" & "\n"
    s &= "\\linespread{1.2}" & "\n"
    s &= "\\setmainfont{Libertinus Serif}[Numbers={OldStyle,Proportional},Ligatures=TeX,Scale=1.0]" & "\n"
    s &= "\\setsansfont{IBMPlexSansCondensed}[Scale=0.92,Ligatures=TeX,Extension=.otf,UprightFont=*-Regular,ItalicFont=*-Italic,BoldFont=*-SemiBold,BoldItalicFont=*-SemiBoldItalic]" & "\n"
    s &= "\\setmonofont{IBMPlexMono.otf}[Scale=0.92,Extension=.otf,UprightFont=*-Regular,ItalicFont = IBMPlexMono-Italic.otf,BoldFont = IBMPlexMono-Bold.otf,BoldItalicFont = IBMPlexMono-BoldItalic.otf]" & "\n"
    s &= "\\usepackage[absolute]{textpos}" & "\n"
    s &= "\\newcommand\\titulo[1]{\\sf\\Large{\\textbf{#1}}}" & "\n"
    s &= "\\newcommand\\subtitulo[1]{\\sf\\large{#1}}" & "\n"
    s &= "\\newcommand\\texto[1]{\\rm\\normalsize{#1}}" & "\n"
    s &= "\\newcommand\\foot[1]{\\sf\\footnotesize{#1}}" & "\n"
    s &= "\\usepackage{url}" & "\n"
    s &= "\\def\\UrlFont{\\tt\\footnotesize}" & "\n"

    s &= "\\begin{document}" & "\n"
    s &= "\\thispagestyle{empty}" & "\n"

    s &= "\\noindent \\titulo{Orden de Taller: " & Contenido[aFields[1]] & "}\\\\" & gb.NewLine & gb.NewLine

    s &= "\\noindent \\subtitulo{Proveedor: " & Contenido[aFields[2]] & "}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Copias impresas: " & Contenido[aFields[3]] & "}\\\\" & gb.NewLine & gb.NewLine

    s &= "\\noindent \\subtitulo{Título: \\emph{" & ContenidoMeta[bFields[84]] & "}}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Autor(es): " & ContenidoMeta[bFields[5]] & "}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Cantidad de páginas: " & ContenidoMeta[bFields[50]] & "}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Formato de corte: " & ContenidoMeta[bFields[61]] & "}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Tintas de interior: " & Contenido[aFields[4]] & "}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Papel de interior: " & Contenido[aFields[5]] & "}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Encuadernación: " & Contenido[aFields[6]] & "}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Tintas de tapa: " & Contenido[aFields[7]] & "}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Revestimiento: " & Contenido[aFields[9]] & "}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Archivo de tapa: \\textbf{" & Contenido[aFields[11]] & "}}\\\\" & gb.NewLine
    s &= "\\noindent \\subtitulo{Archivo de interiores: \\textbf{" & Contenido[aFields[12]] & "}}\\\\" & gb.NewLine & gb.NewLine & gb.NewLine

    s &= "\\linespread{1.0}" & "\n"
    s &= "\\noindent \\subtitulo{\\textbf{Observaciones}}\\\\" & gb.NewLine

    s &= "\\texto{" & Contenido[aFields[10]] & "}\\\\" & gb.NewLine

    s &= "\\begin{textblock*}{44mm}(152mm,20mm)" & "\n"
    If Not IsNull(ContenidoMeta[bFields[49]]) And Len(ContenidoMeta[bFields[49]]) > 0 Then
      s &= "\\includegraphics[width=44mm]{" & ContenidoMeta[bFields[49]] & "}" & "\n"
    Else
      ' Si no hay registro, usa una imagen predefinida
      s &= "\\includegraphics[width=44mm]{" & User.Home & "/.gbtexpublisher/falta-tapa.png}" & "\n"
    Endif
    s &= "\\end{textblock*}" & "\n"

    s &= "\\begin{textblock*}{44mm}(152mm,90mm)" & "\n"
    s &= "\\begin{minipage}{44mm}" & "\n"
    s &= "\\noindent\\foot{ISBN: \\textbf{" & ContenidoMeta[bFields[35]] & "}}\\\\" & "\n"
    s &= "\\noindent\\foot{Idioma: \\textbf{" & ContenidoMeta[bFields[39]] & "}}\\\\" & "\n"
    s &= "\\end{minipage}" & "\n"
    s &= "\\end{textblock*}" & "\n"

    'datos del contacto
    s &= "\\begin{textblock*}{44mm}(152mm,150mm)" & "\n"
    s &= "\\begin{minipage}{44mm}" & "\n"
    s &= "\\noindent \\foot{Para consultas}\\\\" & gb.NewLine
    s &= "\\noindent \\foot{contacto}\\\\" & gb.NewLine
    s &= "\\noindent \\foot{\\textbf{" & ContenidoComenta[cFields[2]] & "}}\\\\" & gb.NewLine
    s &= "\\noindent \\foot{correo}\\\\" & gb.NewLine
    s &= "\\noindent \\foot{\\textbf{" & ContenidoComenta[cFields[3]] & "}}\\\\" & gb.NewLine
    s &= "\\noindent \\foot{teléfono}\\\\" & gb.NewLine
    s &= "\\noindent \\foot{\\textbf{" & ContenidoComenta[cFields[4]] & "}}\\\\" & gb.NewLine
    s &= "\\end{minipage}" & "\n"
    s &= "\\end{textblock*}" & "\n"

    'pie de página
    s &= "\\vfill" & gb.NewLine
    s &= "\\noindent\\foot{\\textbf{Disclaimer:} Esta página no forma parte del contenido oficial del libro. La misma se generó para proporcionar al taller de imprenta instrucciones y comentarios. Asegúrese de revisar las observaciones aquí indicadas antes de realizar la impresión y no dude en ponerse en contacto con la editorial si encuentra un problema en el trabajo.}" & gb.NewLine & gb.NewLine
    s &= "\\noindent\\foot{\\textbf{Fecha de emisión de esta OT:} \\today}" & gb.NewLine & gb.NewLine
    s &= "\\end{document}" & gb.NewLine
    s &= "\n"

    Contenido.MoveNext
  Wend

  ' Establece la ruta y el nombre del archivo de salida
  outputFile = File.Dir(FMain.TextBox1.Text) & "/files/gbTeXOT-" & NombreArchivoTEX

  ' Guarda el contenido acumulado en un solo archivo
  File.Save(outputFile, s)

End
